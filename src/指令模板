la $%c,%0\n

sb $%1,%0\n
sh $%1,%0\n
sw $%1,%0\n
lb $%c,%0\n
lh $%c,%0\n
lw $%c,%0\n

lbu $%c,%0\n
lhu $%c,%0\n

##arithmetic
addu $%c,$%0,%1\n
and $%c,$%0,%1\n"
or $%c,$%0,%1\n" 
xor $%c,$%0,%1\n"
subu $%c,$%0,%1\n
sll $%c,$%0,%1\n
sra $%c,$%0,%1\n
srl $%c,$%0,%1\n

## some pseudo instructions
not $%c,$%0\n" 
negu $%c,$%0\n"
move $%c,$%0\n"

sll $%c,$%0,24; sra $%c,$%c,24\n" 
sll $%c,$%0,16; sra $%c,$%c,16\n" 
and $%c,$%0,0xff\n"               
and $%c,$%0,0xffff\n"             

#branch
b %0\n
j $%0\n

#conditional branch
beq $%0,$%1,%a\n" 
bge $%0,$%1,%a\n" 
bgeu $%0,$%1,%a\n"
bgt $%0,$%1,%a\n" 
bgtu $%0,$%1,%a\n"
ble $%0,$%1,%a\n" 
bleu $%0,$%1,%a\n"
blt $%0,$%1,%a\n" 
bltu $%0,$%1,%a\n"
bne $%0,$%1,%a\n" 


#function call
jal %0\n

# emit2 output
sw $%d,%d+($sp)\n
lw $%d,%d+($sp)\n

# function output
addu $sp,$sp,%d\n
j $31\n

# blkloop output
addu $%d,$%d,%d\n
bltu $%d,$%d,L$%d\n
lbu $%d,%d+($%d)\n
lhu $%d,%d+($%d)\n
lw $%d,%d+($%d)\n
ulhu $%d,%d+($%d)\n
ulw $%d,%d+($%d)\n
sb $%d,%d+($%d)\n
sh $%d,%d+($%d)\n
sw $%d,%d+($%d)\n
ush $%d,%d+($%d)\n
usw $%d,%d+($%d)\n
